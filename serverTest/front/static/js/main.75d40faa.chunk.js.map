{"version":3,"sources":["store/store.js","components/Button.js","components/LinkButton.js","store/methods.js","components/StartPage.js","components/BoardItem.js","components/GameBoard.js","components/NewGamePage.js","App.js","serviceWorker.js","index.js"],"names":["reducers","combineReducers","userData","state","arguments","length","undefined","data","type","name","userId","currentGame","1","2","3","4","5","6","7","8","9","game","myTurn","gameId","winner","pat","opponentName","timeoutId","isMyTurnTimeoutId","winTimeout","action","payload","Object","objectSpread","clearInterval","itemNumber","me","map","i","opponent","store","createStore","composeWithDevTools","applyMiddleware","thunk","Button","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","disabled","react_default","a","createElement","className","classList","join","onClick","text","Component","Link","to","route","host","methods","setName","dispatch","axios","post","concat","then","_ref","status","searchOpponent","_ref2","console","log","pending","leaveGame","makeTurn","_ref3","win","isMyTurn","get","params","_ref4","isGameWin","_ref5","StartPage","style","width","components_Button","e","preventDefault","prompt","LinkButton","React","connect","withRouter","types","Item","setInterval","number","_this2","borderTop","borderRight","borderBottom","borderLeft","GameBoard","setTimeoutId","setTimeout","setTimeoutTurnId","_this3","_this$props$data$game","newGame","BoardItem","NewGamePage","history","push","components_GameBoard","App","es","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.75d40faa.chunk.js","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nfunction userData(\n    state = {\n        data: {\n            type: null, // 'x' or 'o'\n            name: null,\n            userId: null,\n        },\n        currentGame: {\n            1: null, //null, 'x' or 'o'\n            2: null,\n            3: null,\n            4: null,\n            5: null,\n            6: null,\n            7: null,\n            8: null,\n            9: null\n        },\n        game: {\n            myTurn: null,\n            gameId: null,\n            winner: null,\n            pat:null,\n            opponentName: null\n        },\n        timeoutId: null,\n        isMyTurnTimeoutId: null,\n        winTimeout: null\n    },\n    action\n) {\n    switch (action.type) {\n        case \"SET_NAME\":\n            state.data.name = action.payload.name;\n            state.data.userId = action.payload.userId;\n            return { ...state };\n        case 'FOUNDED_GAME':\n            state.data.type = action.payload.type;\n            state.game.myTurn = action.payload.type === 'x';\n            state.game.gameId = action.payload.gameId;\n            state.game.opponentName = action.payload.opponentName;\n            if (!state.game.myTurn) {\n                state.isMyTurnTimeoutId = true;\n            }\n            clearInterval(state.timeoutId);\n            state.timeoutId = null;\n            return {...state};\n        case 'PENDING_GAME':\n            state.game.gameId = action.payload.gameId;\n            return state;\n        case 'SAVE_TIMEOUT_OTHER':\n            clearInterval(state.isMyTurnTimeoutId);\n            state.isMyTurnTimeoutId = action.timeoutId;\n            return state;\n        case 'SAVE_TIMEOUT':\n            clearInterval(state.timeoutId);\n            state.timeoutId = action.timeoutId;\n            return state;\n        case 'CLEAR_INTERVAL':\n            clearInterval(state.timeoutId);\n            state.timeoutId = null;\n            return state;\n        case 'LEAVE_GAME':\n            state.data.type = null;\n            state.game.gameId = null;\n            state.game.myTurn = null;\n            state.currentGame = {\n                1: null, //null, 'x' or 'o'\n                2: null,\n                3: null,\n                4: null,\n                5: null,\n                6: null,\n                7: null,\n                8: null,\n                9: null\n            };\n            state.game = {\n                myTurn: null,\n                gameId: null,\n                winner: null,\n                pat:null,\n                opponentName: null\n            };\n            state.isMyTurnTimeoutId && clearInterval(state.isMyTurnTimeoutId);\n            state.timeoutId && clearInterval(state.timeoutId);\n            state.isMyTurnTimeoutId = null;\n            state.timeoutId = null;\n            return {...state};\n        case 'MAKE_TURN':\n            state.currentGame[action.payload.itemNumber] = state.data.type;\n            state.game.myTurn = false;\n            state.timeoutId = action.payload.timeoutId;\n            return {...state};\n        case 'MY_TURN_FETCHED':\n            action.payload.me && action.payload.me.map(i=>{\n                state.currentGame[i] = state.data.type\n            });\n            action.payload.opponent && action.payload.opponent.map(i=>{\n                state.currentGame[i] = state.data.type === 'o' ? 'x' : 'o'\n            });\n            state.game.myTurn = true;\n            state.isMyTurnTimeoutId && clearInterval(state.isMyTurnTimeoutId);\n            state.timeoutId && clearInterval(state.timeoutId);\n            state.isMyTurnTimeoutId = null;\n            return {...state};\n        case 'GAME_HAS_WINNER':\n            state.isMyTurnTimeoutId && clearInterval(state.isMyTurnTimeoutId);\n            state.timeoutId && clearInterval(state.timeoutId);\n            state.game.winner = action.payload.winner;\n            return {...state};\n        case 'PAT_GAME':\n            state.isMyTurnTimeoutId && clearInterval(state.isMyTurnTimeoutId);\n            state.timeoutId && clearInterval(state.timeoutId);\n            state.game.pat = true;\n            return {...state};\n        case 'NEW_GAME':\n            state.timeoutId = action.payload.timeoutId;\n            state.data.type = null;\n            state.currentGame = {\n                1: null, //null, 'x' or 'o'\n                2: null,\n                3: null,\n                4: null,\n                5: null,\n                6: null,\n                7: null,\n                8: null,\n                9: null\n            };\n            state.game = {\n                myTurn: null,\n                gameId: null,\n                winner: null,\n                pat:null,\n                opponentName: null\n            };\n            state.isMyTurnTimeoutId = null;\n            return {...state};\n        default:\n            return state;\n    }\n}\n\nconst reducers = combineReducers({ userData });\n\nconst store = createStore(\n    reducers,\n    composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;","import React, {Component} from 'react';\n\nclass Button extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            disabled: false,\n        }\n    }\n    render() {\n        return (\n        <button\n            className={(this.props.classList && this.props.classList.join(' ')) || 'btn btn-light'}\n            disabled={this.state.disabled}\n            onClick={this.props.onClick || (() => {})}\n        >\n            {this.props.text}\n        </button>);\n    }\n}\n\nexport default Button;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Button extends Component{\n    render() {\n        return (\n            <Link\n                to={this.props.route || '/'}\n                className={(this.props.classList && this.props.classList.join(' ')) || 'btn btn-light'}\n                onClick={this.props.onClick || (()=>{})}\n            >\n                {this.props.text}\n            </Link>);\n    }\n}\n\nexport default Button;","import axios from 'axios';\n\nconst host = 'http://localhost:8000/api/';\nconst methods = {\n    host: host,\n    setName: name => dispatch => {\n        axios\n            .post(`${host}users/new`,{name: name})\n            .then(({data}) => {\n                if (data.status){\n                    dispatch({\n                        type: \"SET_NAME\",\n                        payload: {\n                            name: name,\n                            userId: data.userId\n                        },\n                    });\n                }\n            })\n    },\n    searchOpponent: (userId, gameId) => dispatch => {\n        axios.post(`${host}games/join`,{userId:userId, gameId: gameId})\n            .then(({data}) => {\n                console.log(data);\n                if (data.status && data.type && data.gameId) {\n                    dispatch({\n                        type: 'FOUNDED_GAME',\n                        payload: {\n                            gameId: data.gameId,\n                            type: data.type,\n                            opponentName: data.opponentName\n                        }\n                    });\n                } else if (data.pending && data.gameId){\n                    dispatch({\n                        type: 'PENDING_GAME',\n                        payload: {\n                            gameId: data.gameId\n                        }\n                    });\n                }\n            })\n    },\n    leaveGame: (userId, gameId) => dispatch => {\n        axios.post(`${host}games/leave`, {userId: userId, gameId: gameId})\n            .then(() => {\n                dispatch({\n                    type: 'LEAVE_GAME',\n                });\n            })\n    },\n    makeTurn: (userId, gameId, itemNumber, timeoutId) => dispatch => {\n        axios.post(`${host}games/turn`,\n            {\n                userId: userId,\n                gameId: gameId,\n                itemNumber: itemNumber\n            })\n            .then(({data}) => {\n                if (data.status){\n                    if (data.win){\n                        dispatch({\n                            type: 'GAME_HAS_WINNER',\n                            payload: {\n                                winner: data.winner\n                            }\n                        });\n                    } else if (data.pat) {\n                        dispatch({\n                            type: 'PAT_GAME'\n                        });\n                    }\n                    dispatch({\n                        type: 'MAKE_TURN',\n                        payload: {\n                            itemNumber: itemNumber,\n                            timeoutId: timeoutId\n                        }\n                    });\n\n                }\n            })\n        ;\n    },\n    isMyTurn: (userId, gameId) => dispatch => {\n        axios.get(`${host}games/request-to-turn`, {\n            params: {\n                userId: userId,\n                gameId: gameId\n            }\n        })\n            .then(({data}) => {\n                if (data.status){\n                    if (data.win){\n                        dispatch({\n                            type: 'GAME_HAS_WINNER',\n                            payload: {\n                                winner: data.winner\n                            }\n                        });\n                    } else if (data.pat) {\n                        dispatch({\n                            type: 'PAT_GAME'\n                        });\n                    }\n                    dispatch({\n                        type: 'MY_TURN_FETCHED',\n                        payload: {\n                            me: data.data.me,\n                            opponent: data.data.opponent\n                        }\n                    });\n                }\n            })\n    },\n    isGameWin: gameId => dispatch => {\n        axios.get(`${host}games/request-to-win`, {\n            params: {\n                gameId: gameId\n            }\n        })\n            .then(({data}) => {\n                if (data.status){\n                    if (data.win){\n                        dispatch({\n                            type: 'GAME_HAS_WINNER',\n                            payload: {\n                                winner: data.winner\n                            }\n                        });\n                    } else if (data.pat) {\n                        dispatch({\n                            type: 'PAT_GAME'\n                        });\n                    }\n                }\n            })\n    }\n};\n\nexport default methods;","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport Button from './Button';\nimport LinkButton from './LinkButton';\nimport methods from '../store/methods';\n\nclass StartPage extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    componentDidMount() {\n        this.props.clearInterval();\n    }\n\n    render() {\n        return (\n            <div className='flex-column align-content-md-center'>\n                <div className='flex-center-wrap' style={{width: '50%'}}>\n                    <Button\n                        text={this.props.data.data.name || 'Enter name'}\n                        onClick={()=>this.props.data.data.userId\n                            ? e => {e.preventDefault()}\n                            : this.props.setName(prompt('Your name'))\n                        }\n                        classList={['btn', 'btn-light', 'button-main']}\n                    />\n                    <LinkButton\n                        text='New game'\n                        classList={['btn', 'btn-light', 'button-main']}\n                        route='/new-game'\n                        onClick={()=>this.props.data.data.userId\n                            ? (()=>{})\n                            : (this.props.setName(prompt('Your name')))}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n    setName: data => dispatch(methods.setName(data)),\n    clearInterval: () => dispatch({type: 'CLEAR_INTERVAL'})\n});\n\nconst mapStateToProps = state => ({\n    data: state.userData\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n    withRouter(StartPage)\n);","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport methods from \"../store/methods\";\n\nconst types = {\n    1: [0,1,1,0],\n    2: [0,1,1,1],\n    3: [0,0,1,1],\n    4: [1,1,1,0],\n    5: [1,1,1,1],\n    6: [1,0,1,1],\n    7: [1,1,0,0],\n    8: [1,1,0,1],\n    9: [1,0,0,1],\n};\n\nclass Item extends React.Component {\n    constructor(props){\n        super(props);\n    }\n\n    myTurn(){\n        let timeoutId = setInterval( () => {\n                this.props.isMyTurn(this.props.data.data.userId, this.props.data.game.gameId,);\n            },1000);\n        this.props.makeTurn(\n            this.props.data.data.userId,\n            this.props.data.game.gameId,\n            this.props.number,\n            timeoutId\n        );\n\n    }\n\n    render() {\n        const {number} = this.props;\n        return (\n            <div\n                className='game-board-item'\n                style={{\n                    borderTop: types[number][0] && '2px solid black',\n                    borderRight: types[number][1] && '2px solid black',\n                    borderBottom: types[number][2] && '2px solid black',\n                    borderLeft: types[number][3] && '2px solid black',\n                }}\n                onClick={(this.props.data.game.myTurn && !this.props.data.currentGame[number])\n                    ? () => this.myTurn() : () => {}\n                }\n            >\n                {this.props.data.currentGame[number]}\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    makeTurn: (userId, gameId, itemNumber, timeoutId) => dispatch(methods.makeTurn(userId, gameId, itemNumber, timeoutId)),\n    isMyTurn: (userId, gameId) => dispatch(methods.isMyTurn(userId, gameId)),\n});\n\nconst mapStateToProps = state => ({\n    data: state.userData\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n    withRouter(Item)\n);","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport BoardItem from \"./BoardItem\";\nimport methods from \"../store/methods\";\nimport Button from \"./Button\";\n\nclass GameBoard extends React.Component{\n    constructor(props){\n        super(props);\n        let timeoutId = setInterval(() => {\n            props.searchOpponent(props.data.data.userId, props.data.game.gameId || null);\n        }, 2000);\n        props.setTimeoutId(timeoutId);\n    }\n\n    componentDidUpdate() {\n        setTimeout(()=> {\n            this.props.isGameWin(this.props.data.game.gameId);\n        },70000);\n        if (!this.props.data.game.myTurn && this.props.data.isMyTurnTimeoutId === true){\n            let timeoutId = setInterval(() => {\n                this.props.isMyTurn(this.props.data.data.userId, this.props.data.game.gameId);\n            }, 1000);\n            this.props.setTimeoutTurnId(timeoutId);\n        }\n    }\n\n    render() {\n        const {pat, winner, opponentName} = this.props.data.game;\n        return (\n            <div>\n                {(this.props.data.data.name && opponentName && !pat && !winner)\n                && <Button\n                    text={`${this.props.data.data.name} vs ${this.props.data.game.opponentName}`}\n                    classList={['btn', 'btn-light', 'button-main']}\n                />}\n                {winner\n                && <Button\n                    text={`${winner} WIN!!!`}\n                    classList={['btn', 'btn-light', 'button-main']}\n                />}\n                {pat\n                && <Button\n                    text={'The game is a draw'}\n                    classList={['btn', 'btn-light', 'button-main']}\n                />}\n                {this.props.data.data.type && <h5>Your letter is {this.props.data.data.type}</h5>}\n                {(!pat && !winner && this.props.data.game.opponentName) && (this.props.data.game.myTurn ? <p>Your turn</p> : <p>Opponent`s turn</p>)}\n                {(pat || winner) &&\n                <Button\n                    text={'New Game'}\n                    onClick={()=>{\n                        let timeoutId = setInterval(() => {\n                            this.props.searchOpponent(this.props.data.data.userId, this.props.data.game.gameId || null);\n                        }, 2000);\n                        this.props.newGame(timeoutId);\n                    }}\n                    classList={['btn', 'btn-light', 'button-main']}\n                />}\n                <div className='game-board-wrap'>\n                    <div className=\"point\">\n                        <BoardItem number={1}/>\n                        <BoardItem number={4}/>\n                        <BoardItem number={7}/>\n                    </div>\n                    <div className=\"point\">\n                        <BoardItem number={2}/>\n                        <BoardItem number={5}/>\n                        <BoardItem number={8}/>\n                    </div>\n                    <div className=\"point\">\n                        <BoardItem number={3}/>\n                        <BoardItem number={6}/>\n                        <BoardItem number={9}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n    searchOpponent: (userId, gameId) => dispatch(methods.searchOpponent(userId, gameId)),\n    setTimeoutId: timeoutId => dispatch({\n        type: 'SAVE_TIMEOUT',\n        timeoutId: timeoutId\n    }),\n    setTimeoutTurnId: timeoutId => dispatch({\n        type: 'SAVE_TIMEOUT_OTHER',\n        timeoutId: timeoutId\n    }),\n    isMyTurn: (userId, gameId) => dispatch(methods.isMyTurn(userId, gameId)),\n    newGame: (timeoutId) => dispatch({\n        type:'NEW_GAME',\n        payload: {\n            timeoutId: timeoutId\n        }\n    }),\n    isGameWin: gameId => dispatch(methods.isGameWin(gameId)),\n});\n\nconst mapStateToProps = state => ({\n    data: state.userData\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n    withRouter(GameBoard)\n);","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport LinkButton from './LinkButton';\nimport GameBoard from \"./GameBoard\";\nimport methods from \"../store/methods\";\n\nclass NewGamePage extends React.Component{\n    constructor(props){\n        super(props);\n        if (!this.props.data.data.userId) {\n            this.props.history.push('/');\n        }\n    }\n\n    render() {\n        return (\n            <div className='flex-column align-content-md-center'>\n                <div className='flex-center-wrap' style={{width: '50%'}}>\n                    <GameBoard/>\n                    <LinkButton\n                        text='Abandon game'\n                        classList={['btn', 'btn-light', 'button-main']}\n                        route='/'\n                        onClick={()=>this.props.leaveGame(this.props.data.data.userId, this.props.data.game.gameId)}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n    leaveGame: (userId, gameId) => dispatch(methods.leaveGame(userId, gameId))\n});\n\nconst mapStateToProps = state => ({\n    data: state.userData\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n    withRouter(NewGamePage)\n);","import React, { Component } from 'react';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/main.css';\n\nimport store from \"./store/store\";\nimport StartPage from './components/StartPage';\nimport NewGamePage from \"./components/NewGamePage\";\n\nclass App extends Component {\n  render() {\n    return (\n        <Provider store={store}>\n            <Router>\n                <div>\n                    <Route exact path=\"/\" component={StartPage} />\n                    <Route path='/new-game' component={NewGamePage}/>\n                </div>\n            </Router>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}